AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  python3.9

  SAM Template for AWS IoT Receiver

Globals:
  Function:
    Timeout: 3

Resources:
  # Lambda Functions
  # Lambda to process all miscellaneous sensors
  IotAtlasMiscFunction:
    Type: AWS::Serverless::Function
    FunctionName: IotAtlasMisc
    Description: Handler for miscellaneous Atlas Scientific readings.
    Properties:
      PackageType: Image
      Environment:
        Variables:
          MQTT_TOPIC: atlas/ready
          MQTT_ENDPOINT: https://a12dev37b8fhwi-ats.iot.us-west-2.amazonaws.com
      Timeout: 5
      Policies:
        arn:aws:iam::050210506452:policy/service-role/aws-iot-role-iotPublish_-2060296645
      Events:
        Trigger:
          Type: IoTRule
          Properties:
            AwsIotSqlVersion: 2016-03-23
            Sql: SELECT * FROM 'atlas/routing' WHERE module <> 'HUM'
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/main/lambdas/iot_atlas_misc
      DockerTag: python3.9-v1
  # Lambda to split Humidity sensor readings
  IotAtlasHumiditySplitterFunction:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Image
      Environment:
        Variables:
          MQTT_TOPIC: atlas/ready
          MQTT_ENDPOINT: https://a12dev37b8fhwi-ats.iot.us-west-2.amazonaws.com
      Timeout: 5
      Policies:
        arn:aws:iam::050210506452:policy/service-role/aws-iot-role-iotPublish_-2060296645
      Events:
        Trigger:
          Type: IoTRule
          Properties:
            AwsIotSqlVersion: 2016-03-23
            Sql: SELECT * FROM 'atlas/routing' WHERE module = 'HUM' AND reading.value <> 'Err'
    Metadata:
      Dockerfile: Dockerfile
      DockerContext: ./src/main/lambdas/iot_atlas_humidity_splitter
      DockerTag: python3.9-v1
  # IoT Rules:
  IoTFilterAtlasErrorsRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: FilterAtlasErrors
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT * FROM 'atlas' WHERE name <> 'Err' AND module <> 'Err' AND version <> 'Err' AND reading.value <> 'Err'
        Actions:
          - Republish:
              Qos: 0
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotMqttRepublication
              Topic: ${topic()}/routing
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
  # IoT Rule to move all error readings to a separate topic
  IoTRepublishAtlasErrorsRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: RepublishAtlasErrors
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT * FROM 'atlas' WHERE name = 'Err' OR module = 'Err' OR version = 'Err' OR reading.value = 'Err'
        Actions:
          - Republish:
              Qos: 0
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotMqttRepublication
              Topic: ${topic()}/error
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
  # Lambda to move all humidity readings to AWS Timestream
  IoTLoadHumidityReadingsToTimestreamRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: LoadHumidityReadingsToTimestream
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT reading.value as humidity FROM 'atlas/ready' WHERE reading.type = 'humidity'
        Actions:
          - Timestream:
              DatabaseName: iot
              TableName: atlas-v3
              Dimensions:
                - Name: device_name
                  Value: Undefined
                - Name: device_version
                  Value: ${version}
                - Name: device_type
                  Value: ${module}
                - Name: device_address_type
                  Value: I2C
                - Name: device_address
                  Value: ${address}
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamWrite
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
  # Lambda to move all temperature readings to AWS Timestream
  IoTLoadTemperatureReadingsToTimestreamRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: LoadTemperatureReadingsToTimestream
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT reading.value as temperature FROM 'atlas/ready' WHERE reading.type = 'temperature'
        Actions:
          - Timestream:
              DatabaseName: iot
              TableName: atlas-v3
              Dimensions:
                - Name: device_name
                  Value: Undefined
                - Name: device_version
                  Value: ${version}
                - Name: device_type
                  Value: ${module}
                - Name: device_address_type
                  Value: I2C
                - Name: device_address
                  Value: ${address}
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamWrite
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
  # Lambda to move all temperature readings to AWS Timestream
  IoTLoadLevelReadingsToTimestreamRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: LoadLevelReadingsToTimestream
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT reading.value as level FROM 'atlas/ready' WHERE reading.type = 'level'
        Actions:
          - Timestream:
              DatabaseName: iot
              TableName: atlas-v3
              Dimensions:
                - Name: device_name
                  Value: Undefined
                - Name: device_version
                  Value: ${version}
                - Name: device_type
                  Value: ${module}
                - Name: device_address_type
                  Value: I2C
                - Name: device_address
                  Value: ${address}
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamWrite
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
  # Lambda to move all switch readings to AWS Timestream
  IoTLoadSwitchReadingsToTimestreamRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: LoadSwitchReadingsToTimestream
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT reading.value as switch FROM 'atlas/ready' WHERE reading.type = 'switch'
        Actions:
          - Timestream:
              DatabaseName: iot
              TableName: atlas-v3
              Dimensions:
                - Name: device_name
                  Value: Undefined
                - Name: device_version
                  Value: ${version}
                - Name: device_type
                  Value: ${module}
                - Name: device_address_type
                  Value: ${addressType}
                - Name: device_address
                  Value: ${address}
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamWrite
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
  # Lambda to move all other readings to AWS Timestream
  IoTLoadOtherReadingsToTimestreamRule:
    Type: AWS::IoT::TopicRule
    Properties:
      RuleName: LoadOtherReadingsToTimestream
      TopicRulePayload:
        AwsIotSqlVersion: 2016-03-23
        Sql: SELECT reading.value as other FROM 'atlas/ready' WHERE reading.type = 'other'
        Actions:
          - Timestream:
              DatabaseName: iot
              TableName: atlas-v3
              Dimensions:
                - Name: device_name
                  Value: Undefined
                - Name: device_version
                  Value: ${version}
                - Name: device_type
                  Value: ${module}
                - Name: device_address_type
                  Value: ${addressType}
                - Name: device_address
                  Value: ${address}
              RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamWrite
        ErrorAction:
          CloudwatchLogs:
            LogGroupName: /aws/iot/core/rules/errors
            RoleArn: arn:aws:iam::050210506452:role/service-role/IotTimestreamDeleteme
Outputs:
  IotAtlasMiscFunction:
    Value: !GetAtt IotAtlasMiscFunction.Arn
  IotAtlasMiscFunctionIamRole:
    Value: !GetAtt IotAtlasMiscFunctionRole.Arn
  IotAtlasHumiditySplitterFunction:
    Value: !GetAtt IotAtlasHumiditySplitterFunction.Arn
  IotAtlasHumiditySplitterFunctionIamRole:
    Value: !GetAtt IotAtlasHumiditySplitterFunctionRole.Arn